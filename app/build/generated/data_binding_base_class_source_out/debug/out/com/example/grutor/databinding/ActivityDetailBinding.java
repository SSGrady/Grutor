// Generated by view binder compiler. Do not edit!
package com.example.grutor.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageButton;
import android.widget.ScrollView;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.grutor.R;
import com.google.android.material.chip.Chip;
import com.google.android.material.chip.ChipGroup;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityDetailBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final AppCompatButton abtnConfirm;

  @NonNull
  public final Chip cEssay;

  @NonNull
  public final Chip cExam;

  @NonNull
  public final Chip cHomework;

  @NonNull
  public final Chip cOneProblem;

  @NonNull
  public final Chip cOther;

  @NonNull
  public final Chip cTwentyPlus;

  @NonNull
  public final Chip cTwoToNineteen;

  @NonNull
  public final ChipGroup cgNumProblem;

  @NonNull
  public final ChipGroup cgType;

  @NonNull
  public final ConstraintLayout clDetails;

  @NonNull
  public final EditText etDescription;

  @NonNull
  public final ImageButton ibCalendar;

  @NonNull
  public final Spinner spTopicsList;

  @NonNull
  public final ScrollView svDescriptionScroller;

  @NonNull
  public final TextView tvDateSelected;

  @NonNull
  public final TextView tvDescription;

  @NonNull
  public final TextView tvTopic;

  @NonNull
  public final TextView tvType;

  @NonNull
  public final TextView tvUrgency;

  private ActivityDetailBinding(@NonNull ConstraintLayout rootView,
      @NonNull AppCompatButton abtnConfirm, @NonNull Chip cEssay, @NonNull Chip cExam,
      @NonNull Chip cHomework, @NonNull Chip cOneProblem, @NonNull Chip cOther,
      @NonNull Chip cTwentyPlus, @NonNull Chip cTwoToNineteen, @NonNull ChipGroup cgNumProblem,
      @NonNull ChipGroup cgType, @NonNull ConstraintLayout clDetails,
      @NonNull EditText etDescription, @NonNull ImageButton ibCalendar,
      @NonNull Spinner spTopicsList, @NonNull ScrollView svDescriptionScroller,
      @NonNull TextView tvDateSelected, @NonNull TextView tvDescription, @NonNull TextView tvTopic,
      @NonNull TextView tvType, @NonNull TextView tvUrgency) {
    this.rootView = rootView;
    this.abtnConfirm = abtnConfirm;
    this.cEssay = cEssay;
    this.cExam = cExam;
    this.cHomework = cHomework;
    this.cOneProblem = cOneProblem;
    this.cOther = cOther;
    this.cTwentyPlus = cTwentyPlus;
    this.cTwoToNineteen = cTwoToNineteen;
    this.cgNumProblem = cgNumProblem;
    this.cgType = cgType;
    this.clDetails = clDetails;
    this.etDescription = etDescription;
    this.ibCalendar = ibCalendar;
    this.spTopicsList = spTopicsList;
    this.svDescriptionScroller = svDescriptionScroller;
    this.tvDateSelected = tvDateSelected;
    this.tvDescription = tvDescription;
    this.tvTopic = tvTopic;
    this.tvType = tvType;
    this.tvUrgency = tvUrgency;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityDetailBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityDetailBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_detail, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityDetailBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.abtnConfirm;
      AppCompatButton abtnConfirm = ViewBindings.findChildViewById(rootView, id);
      if (abtnConfirm == null) {
        break missingId;
      }

      id = R.id.cEssay;
      Chip cEssay = ViewBindings.findChildViewById(rootView, id);
      if (cEssay == null) {
        break missingId;
      }

      id = R.id.cExam;
      Chip cExam = ViewBindings.findChildViewById(rootView, id);
      if (cExam == null) {
        break missingId;
      }

      id = R.id.cHomework;
      Chip cHomework = ViewBindings.findChildViewById(rootView, id);
      if (cHomework == null) {
        break missingId;
      }

      id = R.id.cOneProblem;
      Chip cOneProblem = ViewBindings.findChildViewById(rootView, id);
      if (cOneProblem == null) {
        break missingId;
      }

      id = R.id.cOther;
      Chip cOther = ViewBindings.findChildViewById(rootView, id);
      if (cOther == null) {
        break missingId;
      }

      id = R.id.cTwentyPlus;
      Chip cTwentyPlus = ViewBindings.findChildViewById(rootView, id);
      if (cTwentyPlus == null) {
        break missingId;
      }

      id = R.id.cTwo_To_Nineteen;
      Chip cTwoToNineteen = ViewBindings.findChildViewById(rootView, id);
      if (cTwoToNineteen == null) {
        break missingId;
      }

      id = R.id.cgNumProblem;
      ChipGroup cgNumProblem = ViewBindings.findChildViewById(rootView, id);
      if (cgNumProblem == null) {
        break missingId;
      }

      id = R.id.cgType;
      ChipGroup cgType = ViewBindings.findChildViewById(rootView, id);
      if (cgType == null) {
        break missingId;
      }

      ConstraintLayout clDetails = (ConstraintLayout) rootView;

      id = R.id.etDescription;
      EditText etDescription = ViewBindings.findChildViewById(rootView, id);
      if (etDescription == null) {
        break missingId;
      }

      id = R.id.ibCalendar;
      ImageButton ibCalendar = ViewBindings.findChildViewById(rootView, id);
      if (ibCalendar == null) {
        break missingId;
      }

      id = R.id.spTopicsList;
      Spinner spTopicsList = ViewBindings.findChildViewById(rootView, id);
      if (spTopicsList == null) {
        break missingId;
      }

      id = R.id.svDescriptionScroller;
      ScrollView svDescriptionScroller = ViewBindings.findChildViewById(rootView, id);
      if (svDescriptionScroller == null) {
        break missingId;
      }

      id = R.id.tvDateSelected;
      TextView tvDateSelected = ViewBindings.findChildViewById(rootView, id);
      if (tvDateSelected == null) {
        break missingId;
      }

      id = R.id.tvDescription;
      TextView tvDescription = ViewBindings.findChildViewById(rootView, id);
      if (tvDescription == null) {
        break missingId;
      }

      id = R.id.tvTopic;
      TextView tvTopic = ViewBindings.findChildViewById(rootView, id);
      if (tvTopic == null) {
        break missingId;
      }

      id = R.id.tvType;
      TextView tvType = ViewBindings.findChildViewById(rootView, id);
      if (tvType == null) {
        break missingId;
      }

      id = R.id.tvUrgency;
      TextView tvUrgency = ViewBindings.findChildViewById(rootView, id);
      if (tvUrgency == null) {
        break missingId;
      }

      return new ActivityDetailBinding((ConstraintLayout) rootView, abtnConfirm, cEssay, cExam,
          cHomework, cOneProblem, cOther, cTwentyPlus, cTwoToNineteen, cgNumProblem, cgType,
          clDetails, etDescription, ibCalendar, spTopicsList, svDescriptionScroller, tvDateSelected,
          tvDescription, tvTopic, tvType, tvUrgency);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
